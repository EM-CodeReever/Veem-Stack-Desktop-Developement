// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  firstName  String
  lastName String
  passwordHash String
  role Role @default(USER)
  reviews Review[]
  phoneNumber String
  gender Gender
  userName String
}
 model Book {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  coverImage String
  description String
  datePublished DateTime
  publishedBy String 
  avgScore Int
  categories String[]
  reviews Review[]
 }

 model Movie {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  coverImage String
  dateReleased DateTime
  avgScore Int
  duration Int
  categories String[]
  mpaRating MPA_Rating
  reviews Review[]
 }

 model Series { 
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  coverImage String
  seasons Int
  firstAired DateTime
  avgScore Int
  categories String[]
  reviews Review[]
 }

model Review {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  createdBy User @relation(fields: [userId], references: [id])
  userId String
  rating Int
  title String
  comments String
  score Int
  createdAt DateTime
  movie Movie @relation(fields: [movieId], references: [id])
  movieId String
  series Series @relation(fields: [seriesId], references: [id])
  seriesId String
  book Book @relation(fields: [bookId], references: [id])
  bookId String
}
enum Role {
  USER
  MANAGER
  ADMIN
}

enum Gender { 
  MALE 
  FEMALE
  NA
}

enum MPA_Rating  {
  GEN
  PG
  PG13
  TN16
  ADLT
  RTRD
}